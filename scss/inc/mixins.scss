@mixin font() {
  font-family: $default-font;
}

@mixin header-font() {
  font-family: $header-font;
}

@mixin respond-to($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media #{map-get($breakpoints, $breakpoint)} {
      @content;
    }
  }
  @else {
    @warn 'Unfortunately, no value could be retrieved from `#{$breakpoint}`. '
    + 'Please make sure it is defined in `$breakpoints` map.';
  }
}

@mixin placeholder() {
  color: $input-placeholder-color !important;
}

@mixin center-text() {
  text-align: center !important;
}

@mixin focus() {
  border-color: $default-focus-color;
  box-shadow:0 0 5px 0 $default-focus-color;
  outline:none;
}

@mixin font-face($local-name, $path, $family, $font-weight, $font-style:'normal') {
  $filepath: "#{$font-path}#{$path}";
  @font-face {
    font-family: "#{$family}";
    src: url("#{$filepath}.eot");
    src: local($local-name),
         url("#{$filepath}.woff") format('woff'),
         url("#{$filepath}.ttf")  format('truetype');
    font-weight: unquote($font-weight);
    font-style: unquote($font-style);
  }
}

// Image management
@mixin hidpi-background-image($filename, $background-size: 'mixed', $extension: png) {
  background-image: url("#{$image-path}#{$filename}.#{$extension}");
  @if ($background-size != 'mixed') {
    background-size: $background-size;
  }
  @media (min--moz-device-pixel-ratio: 1.3),
  (-o-min-device-pixel-ratio: 2.6/2),
  (-webkit-min-device-pixel-ratio: 1.3),
  (min-device-pixel-ratio: 1.3),
  (min-resolution: 1.3dppx) {
    background-image: url("#{$image-path}#{$filename}@2x.#{$extension}");
  }
}

@mixin visuallyhidden() {
  position: absolute;
  overflow: hidden;
  clip: rect(0 0 0 0);
  height: 1px; width: 1px;
  margin: -1px; padding: 0; border: 0;
}
